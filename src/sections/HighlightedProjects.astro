---
import Typography from '@src/components/Typography.astro'
import { getAllProjectsService } from '@src/infrastructure/services/pageService'
import type { DocumentData } from 'firebase/firestore'

type Elements = {}

type Props = {
  title: string
  lengthGalerry?: number
  imageTitles?: string[]
}

const { title, lengthGalerry, imageTitles } = Astro.props

const AllProjects = (await getAllProjectsService()) as DocumentData[]

function pickUniqueProjects(arr: DocumentData, count?: number) {
  const result = []
  const tempArray = [...(arr as any)] // Create a copy of the array

  if (count === undefined) {
    return arr.map((project: any) => {
      return {
        id: project?.id,
        src: project?.gallery?.[0],
      }
    })
  } else {
    for (let i = 0; i < count; i++) {
      const randomIndex = Math.floor(Math.random() * tempArray.length)
      result.push(tempArray.splice(randomIndex, 1)[0]) // Remove and return the random element
    }

    return result.map((project: any) => {
      return {
        id: project?.id,
        src: project?.gallery?.[0],
      }
    })
  }
}

const randomProjects = pickUniqueProjects(AllProjects, lengthGalerry)
---

<section class='py-8'>
  <Typography as='h4' variant='h4' class={'mb-6'}>{title}</Typography>
  <div class={`${imageTitles ? 'grid' : 'hidden'} grid-cols-1 gap-4 md:grid md:grid-cols-3`}>
    {
      randomProjects.map(({ src, id }: { src: string; id: string }, index: number) => (
        <div class='aspect-w-4 aspect-h-3 relative'>
          {imageTitles && (
            <span class='absolute left-0 top-0 h-full w-full'>
              <Typography as='h5' variant='body' class={'mb-6 mt-6 text-center  text-white'}>
                {imageTitles[index]}
              </Typography>
            </span>
          )}
          <a href={`/project/${id}`}>
            <img src={src} alt={`proyect-${index}`} class='object-fit h-full max-h-[280px] w-full' />
          </a>
        </div>
      ))
    }
  </div>

  <!-- TODO: add gallery in mobile -->
  {
    !imageTitles && (
      <div class='grid grid-cols-1 gap-4 md:hidden md:grid-cols-3'>
        {randomProjects.slice(0, 1).map(({ src }: { src: string }, index: number) => (
          <div class='aspect-w-4 aspect-h-3'>
            <img src={src} alt={`proyect-${index}`} class='h-full w-full object-cover' />
          </div>
        ))}
      </div>
    )
  }
</section>
